---
# Add necessary apt repositories before installing packages
- name: Add repositories
  become: true
  apt_repository: universe state=present
  apt_repository: repo='ppa:certbot/certbot' state=present

# Update and Install required apt packages
- name: Install prod dependencies
  become: true
  apt:
    name: "{{ item }}"
    update: true
    update_cache: true
    state: present
  with_items:
    - 'git'
    - 'pipenv'
    - 'nginx'
    - 'software-properties-common'
    - 'certbot'
    - 'python-certbot-nginx'
    
- name: Create project directory
  become: true
  file:
    path: "{{ project_path }}"
    state: directory
    owner: "{{ user_name }}"
    mode: 0755

- name: Checkout repo
  git:
    accept_hostkey: yes
    force: yes
    repo: "{{ git_repo }}"
    dest: "{{ project_path }}"
    version: "{{ git_branch }}"

# Source: https://github.com/pypa/pipenv/issues/363#issuecomment-421310544
- name: Check for venv
  ignore_errors: true
  command: "pipenv --venv"
  args:
    chdir: "{{ project_path }}"
  register: pipenv_venv_check_cmd
  changed_when:
    - ('No virtualenv' not in pipenv_venv_check_cmd.stderr)

- name: Run pipenv install
  command: "pipenv install"
  args:
    chdir: "{{ project_root }}"
  when:
    - ('No virtualenv' in pipenv_venv_check_cmd.stderr) 

# There is a UFW module added to Ansible as of v 1.6, see here: https://docs.ansible.com/ansible/2.4/ufw_module.html
- name: Enable UFW
  ufw: 
    state: enabled
    policy: disallow # By default, we disallow all connections other than those we specifically allow
    
- name: UFW logging on
  ufw:
    logging: on
    
- name: Allow OpenSSH
  ufw:
    rule: allow
    name: OpenSSH
    
- name: Allow Nginx
  ufw:
    rule: allow
    name: Nginx

- name: Allow port 80 tcp
  ufw:
    rule: allow
    port: 80
    proto: tcp
    
- name: Allow port 443 tcp
  ufw:
    rule: allow
    port: 443
    proto: tcp

- name: Copy Nginx config
  become: yes
  copy:
    src: cce-search.conf
    dest: /etc/nginx/conf.d/cce-search,conf
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0755
  
# Both start Nginx and enable it to restart on reboot
- name: Enable Nginx
  become: yes
  raw: 'systemctl nginx start && systemctl nginx enable'

# Configure HTTPS cert w/ Certbot
- name: Generate HTTPS cert
  become: true
  command: "certbot --nginx" # Does this command halt for [y/n] input?